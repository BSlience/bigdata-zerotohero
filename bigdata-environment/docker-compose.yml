version: "3"

services:
  # 节点名称
  namenode:
    # 镜像来源
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    # docker容器名
    container_name: namenode
    restart: always
    # 对外映射端口
    ports:
      - 9870:9870
      - 9010:9000
    # 数据映射服务器位置
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    # 环境变量
    environment:
      - CLUSTER_NAME=hadoop-cluster
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    # 配置环境文件位置
    env_file:
      - ./hadoop.env

  datanode1:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode1
    restart: always
    volumes:
      - hadoop_datanode1:/hadoop/dfs/data
    environment:
      # datanode依赖namenode
      SERVICE_PRECONDITION: "namenode:9870"
      CORE_CONF_fs_defaultFS: hdfs://namenode:9000
    ports:
      - "9864:9864"
    env_file:
      - ./hadoop.env

  datanode2:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode2
    restart: always
    volumes:
      - hadoop_datanode2:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
      CORE_CONF_fs_defaultFS: hdfs://namenode:9000
    ports:
      - "9865:9864"
    env_file:
      - ./hadoop.env

  datanode3:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode3
    restart: always
    volumes:
      - hadoop_datanode3:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
      CORE_CONF_fs_defaultFS: hdfs://namenode:9000
    ports:
      - "9866:9864"
    env_file:
      - ./hadoop.env

  # hadoop集群管理组件
  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode1:9864 datanode2:9864 datanode3:9864"
    ports:
        - "8088:8088"
    env_file:
      - ./hadoop.env

  # 节点管理组件
  nodemanager:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode1:9864 datanode2:9864 datanode3:9864 resourcemanager:8088"
    ports:
        - "8042:8042"
    env_file:
      - ./hadoop.env

  # 计算和查询历史记录存储服务
  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode1:9864 datanode2:9864 datanode3:9864 resourcemanager:8088"
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    ports:
        - "8188:8188"
    env_file:
      - ./hadoop.env

  spark-master:
    image: bde2020/spark-master:3.0.2-hadoop3.2
    container_name: spark-master
    depends_on:
      - namenode
      - datanode1
      - datanode2
      - datanode3
    ports:
      - "8080:8080"
      - "7077:7077"
    volumes:
      - shared-workspace:/opt/workspace
      
    environment:
      - INIT_DAEMON_STEP=setup_spark
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000

  spark-worker-1:
    image: bde2020/spark-worker:3.0.2-hadoop3.2
    container_name: spark-worker-1
    hostname: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000

    volumes:
      - shared-workspace:/opt/workspace


  spark-worker-2:
    image: bde2020/spark-worker:3.0.2-hadoop3.2
    container_name: spark-worker-2
    hostname: spark-worker-2
    depends_on:
      - spark-master
    ports:
      - "8082:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    volumes:
      - shared-workspace:/opt/workspace
      
  # hive服务，依赖于hadoop
  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-server
    depends_on:
      - namenode
      - datanode1
      - datanode2
      - datanode3
    env_file:
      - ./hadoop-hive.env
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
    ports:
      - "10000:10000"
    volumes:
      - ./startup.sh:/usr/local/bin/startup.sh

  # hive元数据存储服务
  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-metastore
    env_file:
      - ./hadoop-hive.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "namenode:9870 datanode1:9864 datanode2:9864 datanode3:9864"
    ports:
      - "9083:9083"

  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:2.3.0
    container_name: hive-metastore-postgresql

  presto-coordinator:
    image: shawnzhu/prestodb:0.181
    container_name: presto-coordinator
    ports:
      - "8089:8089"
  
  zoo:
    image: zookeeper:3.4.10
    container_name: zoo
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888
    ports:
      - 2181:2181

  hbase-master:
    image: bslience/hbase-master
    container_name: hbase-master
    hostname: hbase-master
    env_file:
      - ./hbase/hbase-distributed-local.env
    environment:
      SERVICE_PRECONDITION: "namenode:9870 datanode1:9864 datanode2:9864 datanode3:9864 zoo:2181"
    ports:
      - 16010:16010
      - 9090:9090

  hbase-region1:
    image: bde2020/hbase-regionserver:1.0.0-hbase1.2.6
    container_name: hbase-regionserver1
    hostname: hbase-regionserver1
    env_file:
      - ./hbase/hbase-distributed-local.env
    environment:
      HBASE_CONF_hbase_regionserver_hostname: hbase-region1
      SERVICE_PRECONDITION: "namenode:9870 datanode1:9864 datanode2:9864 datanode3:9864 zoo:2181 hbase-master:16010"
    ports:
      - 16030:16030

  hbase-region2:
    image: bde2020/hbase-regionserver:1.0.0-hbase1.2.6
    container_name: hbase-regionserver2
    hostname: hbase-regionserver2
    env_file:
      - ./hbase/hbase-distributed-local.env
    environment:
      HBASE_CONF_hbase_regionserver_hostname: hbase-region2
      SERVICE_PRECONDITION: "namenode:9870 datanode1:9864 datanode2:9864 datanode3:9864 zoo:2181 hbase-master:16010"
    ports:
      - 16031:16030

  hue:
    image: gethue/hue:latest
    hostname: hue
    container_name: hue
    dns: 8.8.8.8
    ports:
    - "8888:8888"
    volumes:
      - ./hue.ini:/usr/share/hue/desktop/conf/z-hue.ini
    depends_on:
    - "mysql"

  mysql:
    image: mysql:5.7
    ports:
        - "33061:3306"
    command: --init-file /data/application/init.sql
    volumes:
        - data:/var/lib/mysql
        - ./init.sql:/data/application/init.sql
    environment:
        MYSQL_ROOT_USER: root
        MYSQL_ROOT_PASSWORD: secret
        MYSQL_DATABASE: hue

  # lab实验平台
  zeepelin-lab:
    image: bslience/zeeplin-lab:latest
    container_name: zeepelin-lab
    ports:
      - "8085:8080"
    depends_on:
      - hive-server
      - namenode
    volumes:
      - ../course/:/opt/zeppelin/notebook/

  datascience-lab:
    image: tensorflow/tensorflow:2.6.0rc1-gpu-jupyter
    container_name: datascience-lab
    environment: 
      JUPYTER_ENABLE_LAB: 'yes'
      PASSWORD: bigdata123
    ports:
      - "8889:8888"
    volumes:
      - ../course/notebook/tensorflow-developer-certificate:/tf/tensorflow-developer-certificate/
      - ../course/notebook/recommend-system-zerotohero:/tf/recommend-system-zerotohero/


  elasticsearch:
    image: elasticsearch:7.8.0
    container_name: elk-es
    restart: always
    environment:
      # 开启内存锁定
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      # 指定单节点启动
      - discovery.type=single-node
    ulimits:
      # 取消内存相关限制  用于开启内存锁定
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200

  cerebro:
    image: lmenezes/cerebro:0.9.2
    container_name: cerebro
    restart: always
    ports:
      - "9000:9000"
    command:
      - -Dhosts.0.host=http://elk-es:9200

  kibana:
    image: kibana:7.8.0
    container_name: elk-kibana
    restart: always
    environment:
      ELASTICSEARCH_HOSTS: http://elk-es:9200
      I18N_LOCALE: zh-CN
    ports:
      - 5601:5601

volumes:
  hadoop_namenode:
  hadoop_datanode1:
  hadoop_datanode2:
  hadoop_datanode3:
  hadoop_historyserver:
  shared-workspace:
  data:


networks:
  custom_net:
   external:
      name: bigdata-net